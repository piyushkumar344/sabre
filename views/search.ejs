<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>AICS</title>


  <script src='https://api.mapbox.com/mapbox-gl-js/v1.4.1/mapbox-gl.js'></script>
  <link href='https://api.mapbox.com/mapbox-gl-js/v1.4.1/mapbox-gl.css' rel='stylesheet' />
  <script
    src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js'></script>
  <link rel='stylesheet'
    href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css'
    type='text/css' />
  <!-- Promise polyfill script required to use Mapbox GL Geocoder in IE 11 -->
  <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
  <script src='https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v3.0.11/turf.min.js'></script>
  <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.js'></script>
  <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.css'
    type='text/css' />
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      height: 500px
    }
  </style>

  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

  <!-- jQuery library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

  <!-- Popper JS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>

  <!-- Latest compiled JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:700&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Nunito+Sans&display=swap" rel="stylesheet">

  <style>
    body,
    html {
      width: 100%;
      height: 100%;
    }

    body {
      font-family: 'Source Sans Pro', sans-serif;
      background-color: rgb(244, 245, 246);
    }

    navbar {
      box-shadow: rgba(0, 0, 0, 0.09) 0px 1px 2px 0px, rgba(0, 0, 0, 0.05) 0px 4px 8px 0px;
    }

    .mapboxgl-marker {
      cursor: pointer;
    }
  </style>
</head>

<body>
  <%- include ./../partials/navbar.ejs %>

  <br>
  <br>

  <div class='container'>
    <div class='row'>
      <div class="col-md-3">
        <form id="searchForm">
          <div class="form-group">
            <label for='selectMember'>Family Member</label>
            <select id='selectMember' class="form-control" name="familyMember">
              <% familyData.forEach((member) => { %>
              <option data-support="<%= member._id %>" value="<%= member.name %>"><%= member.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="form-group">
            <label for="lastSeen">Last Seen</label>
            <input class='form-control' required id='lastSeen' type='number' name='lastSeen' placeholder='Minutes'>
          </div>
          <div class="custom-file mb-3">
            <input type="file" class="custom-file-input" id="customFile" name="recentImg">
            <label class="custom-file-label" for="customFile">Image(Optional)</label>
          </div>
          <button type='submit' class='form-control btn btn-primary'>Search</button>
        </form>
      </div>
      <div class="col-md-9">
        <div id='map'></div>
      </div>
    </div>
  </div>


  <script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2ticm8iLCJhIjoiY2syMjgxY3A5MXJpcjNpdGV6azVvaGRpaiJ9.oNlBtgHYmZNsXw3IOBd0mw';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [78.6569, 22.9734],
      zoom: 4
    });
    var draw = new MapboxDraw({
      displayControlsDefault: false,
      controls: {
        polygon: true,
        trash: true
      }
    });
    var geocoder = new MapboxGeocoder({
      accessToken: mapboxgl.accessToken,
      mapboxgl: mapboxgl,
      countries: 'IN',
      limit: 10
    });

    // Geocoder (Text to Coords)
    map.addControl(geocoder);
    geocoder.on('result', function (e) {
      console.log(e.result.geometry);
    })
    // Polygon Draw
    map.addControl(draw);
    map.addControl(new mapboxgl.NavigationControl());
    map.on('draw.create', updateArea);
    map.on('draw.delete', updateArea);
    map.on('draw.update', updateArea);

    function updateArea(e) {
      var data = draw.getAll();
      console.log(data);
      try {
        console.log(data.features[0].geometry);
      } catch (e) {
        console.log('Geometry Deleted');
      }
    }

    //Current Location
    // map.addControl(new mapboxgl.GeolocateControl({
    //   positionOptions: {
    //       enableHighAccuracy: true
    //   },
    //   trackUserLocation: true
    //}));
  </script>

  <script>
    $("#searchForm").submit((e) => {
      e.preventDefault();
      const data = draw.getAll();
      console.log(data);
      if (!data.features[0]) {
        alert("Draw a Polygon on the map");
        return false;
      }

      const file = $('#customFile')[0].files[0];
      const fd = new FormData();
      fd.append('recentImg', file);
      fd.append('polygonCoords', JSON.stringify(data.features[0].geometry));
      fd.append('memberName', $("#selectMember").val());
      fd.append('memberId', $("#selectMember").find('option:selected').data('support'));
      fd.append('lastSeen', $("#lastSeen").val());
      $.ajax({
        type: "POST",
        url: "/findMember",
        data: fd,
        processData: false,
        contentType: false,
        success: function (res) {
          console.log(res);


          res.cams.forEach((val) => {
            var popup = new mapboxgl.Popup({ offset: 25 })
              .setText(val.name);
            var marker = new mapboxgl.Marker()
              .setLngLat([val.location.coordinates[0], val.location.coordinates[1]])
              .setPopup(popup)
              .addTo(map);
          });
          map.flyTo({ center: [res.centroidResult.Cx, res.centroidResult.Cy], zoom: 17 });
        }
      });
    });
  </script>

  <script>
    $(".custom-file-input").on("change", function () {
      var fileName = $(this).val().split("\\").pop();
      $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });
  </script>
</body>

</html>